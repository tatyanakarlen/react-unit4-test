{"version":3,"sources":["/Users/tatyanakarlen/Documents/projects/reactfinaltest/src/index.css","main.e21196b4.chunk.css","/Users/tatyanakarlen/Documents/projects/reactfinaltest/src/App.css","/Users/tatyanakarlen/Documents/projects/reactfinaltest/src/Components/Circles/Circles.css","/Users/tatyanakarlen/Documents/projects/reactfinaltest/src/Components/CircleSelector/CircleSelector.css"],"names":[],"mappings":"AAAA,KACE,QAAA,CACA,mICEY,CDCZ,kCAAA,CACA,iCCCF,CDEA,KACE,uECEF,CCZA,OACE,qBDeF,CCZA,KACE,YAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBDeF,CCZA,YACE,UAAA,CACA,YAAA,CACA,cAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CACA,kBDeF,CCZA,UAEE,kBAAA,CACA,sBAAA,CAEA,QDeF,CE1CA,mBDuBE,YAAA,CAGA,kBD2BA,CErDF,SAEI,kBAAA,CACA,4BAAA,CAEA,YAAA,CACA,WAAA,CACA,wBAAA,CACA,iBF6CF,CE1CA,aACE,WAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,wBAAA,CACA,UAAA,CACA,cAAA,CACA,wBAAA,CACA,iBAAA,CACA,gBF6CF,CEzCA,sBACE,qBAAA,CACA,YAAA,CACA,uBF6CF,CG1EF,gBACI,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,kBAAA,CACA,YAAA,CACA,WAAA,CACA,uBAAA,CACA,iBAAA,CACA,iBH4EF,CGzEA,uBACE,WAAA,CACA,WAAA,CACA,uBAAA,CACA,UAAA,CACA,iBAAA,CACA,wBAAA,CACA,cAAA,CACA,YH4EF,CGzEA,6BACE,wBH4EF,CGxEA,gCACE,qBAAA,CACA,aAAA,CACA,WAAA,CACA,cH4EF","file":"main.e21196b4.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\nbody, * {\n  box-sizing: border-box;\n}\n\n.App {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.App-header {\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n  background-color: grey;\n  color: white;\n  text-align: center;\n  letter-spacing: 3px;\n}\n\n.App main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex: 1 1;\n}\n\n.Circles {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    align-items: center;\n    height: 200px;\n    width: 200px;\n    border: 4px solid limegreen;\n    border-radius: 8px;\n  }\n  \n  .Circles div {\n    height: 75px;\n    width: 75px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: limegreen;\n    color: white;\n    font-size: 30px;\n    border: 5px solid limegreen;\n    border-radius: 50%;\n    margin: auto 10px;\n  }\n  \n  /* Another dose of dynamic className goodness is the winning ticket */\n  .Circles div.selected {\n    background-color: white;\n    color: purple;\n    border: 5px solid purple;\n  }\n.CircleSelector {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    height: 200px;\n    width: 150px;\n    border: 4px solid purple;\n    border-radius: 8px;\n    margin-right: 20px;\n  }\n  \n  .CircleSelector button {\n    height: 40px;\n    width: 125px;\n    background-color: purple;\n    color: white;\n    border-radius: 4px;\n    text-transform: uppercase;\n    cursor: pointer;\n    outline: none;\n  }\n  \n  .CircleSelector button:hover {\n    background-color: limegreen;\n  }\n  \n  /* Adding a class of 'selected' to the selected button dynamically is secret sauce */\n  .CircleSelector button.selected {\n    background-color: white;\n    color: limegreen;\n    border: none;\n    cursor: default;\n  }\n","body, * {\n  box-sizing: border-box;\n}\n\n.App {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.App-header {\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n  background-color: grey;\n  color: white;\n  text-align: center;\n  letter-spacing: 3px;\n}\n\n.App main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n",".Circles {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    align-items: center;\n    height: 200px;\n    width: 200px;\n    border: 4px solid limegreen;\n    border-radius: 8px;\n  }\n  \n  .Circles div {\n    height: 75px;\n    width: 75px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: limegreen;\n    color: white;\n    font-size: 30px;\n    border: 5px solid limegreen;\n    border-radius: 50%;\n    margin: auto 10px;\n  }\n  \n  /* Another dose of dynamic className goodness is the winning ticket */\n  .Circles div.selected {\n    background-color: white;\n    color: purple;\n    border: 5px solid purple;\n  }",".CircleSelector {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    height: 200px;\n    width: 150px;\n    border: 4px solid purple;\n    border-radius: 8px;\n    margin-right: 20px;\n  }\n  \n  .CircleSelector button {\n    height: 40px;\n    width: 125px;\n    background-color: purple;\n    color: white;\n    border-radius: 4px;\n    text-transform: uppercase;\n    cursor: pointer;\n    outline: none;\n  }\n  \n  .CircleSelector button:hover {\n    background-color: limegreen;\n  }\n  \n  /* Adding a class of 'selected' to the selected button dynamically is secret sauce */\n  .CircleSelector button.selected {\n    background-color: white;\n    color: limegreen;\n    border: none;\n    cursor: default;\n  }"]}